name: Docker Login and Push

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Docker login
      run: echo ${{ secrets.ALIYUN_REGISTRY_PASSWORD }} | docker login -u ${{ secrets.ALIYUN_REGISTRY_USER }} --password-stdin ${{ secrets.ALIYUN_REGISTRY }}
      env:
        ALIYUN_REGISTRY: ${{ secrets.ALIYUN_REGISTRY }}
        ALIYUN_REGISTRY_USER: ${{ secrets.ALIYUN_REGISTRY_USER }}
        ALIYUN_REGISTRY_PASSWORD: ${{ secrets.ALIYUN_REGISTRY_PASSWORD }}

    - name: Build and Push Docker Images
      run: |
        # 这里继续你的其他命令
        while IFS= read -r line || [ -n "$line" ]; do
            [[ -z "$line" ]] && continue
            if echo "$line" | grep -q '^\s*#'; then
                continue
            fi
            echo "docker pull $line"
            docker pull $line
            platform=$(echo "$line" | awk -F'--platform[ =]' '{if (NF>1) print $2}' | awk '{print $1}')
            echo "platform is $platform"
            platform_prefix="${platform//\//_}_"
            image=$(echo "$line" | awk '{print $NF}')
            image_name_tag=$(echo "$image" | awk -F'/' '{print $NF}')
            name_space=$(echo "$image" | awk -F'/' '{if (NF==3) print $2; else if (NF==2) print $1; else print ""}')
            image_name=$(echo "$image_name_tag" | awk -F':' '{print $1}')
            name_space_prefix=""
            if [[ -n "${duplicate_images[$image_name]}" ]]; then
                if [[ -n "${name_space}" ]]; then
                    name_space_prefix="${name_space}_"
                fi
            fi
            image_name_tag="${image_name_tag%%@*}"
            new_image="$ALIYUN_REGISTRY/$ALIYUN_NAME_SPACE/$platform_prefix$name_space_prefix$image_name_tag"
            echo "docker tag $image $new_image"
            docker tag $image $new_image
            echo "docker push $new_image"
            docker push $new_image
            echo "开始清理磁盘空间"
            echo "=============================================================================="
            df -hT
            echo "=============================================================================="
            docker rmi $image
            docker rmi $new_image
            echo "磁盘空间清理完毕"
            echo "=============================================================================="
            df -hT
            echo "=============================================================================="     
        done < images.txt
      env:
        ALIYUN_REGISTRY: ${{ secrets.ALIYUN_REGISTRY }}
        ALIYUN_NAME_SPACE: ${{ secrets.ALIYUN_NAME_SPACE }}
        ALIYUN_REGISTRY_USER: ${{ secrets.ALIYUN_REGISTRY_USER }}
        ALIYUN_REGISTRY_PASSWORD: ${{ secrets.ALIYUN_REGISTRY_PASSWORD }}
